<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Present Day, Present Time</title>
    <link>https://gobomb.github.io/tags/golang/</link>
    <description>Recent content in golang on Present Day, Present Time</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 18 Mar 2018 14:02:01 +0800</lastBuildDate>
    
	<atom:link href="https://gobomb.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cheat Sheet</title>
      <link>https://gobomb.github.io/post/cheatsheet/</link>
      <pubDate>Sun, 18 Mar 2018 14:02:01 +0800</pubDate>
      
      <guid>https://gobomb.github.io/post/cheatsheet/</guid>
      <description>Linux 安装 deb 文件： sudo dpkg -i [name].deb sudo apt-get install -f （修复依赖关系） linux 查找文件 find [path] -name &amp;quot;*.log&amp;quot; ubuntu（桌面版） 在终端输入xkill，鼠标变成x，点击 GUI 程序，可强制关</description>
    </item>
    
    <item>
      <title>编程语言的求值策略</title>
      <link>https://gobomb.github.io/post/evaluation_strategy/</link>
      <pubDate>Thu, 25 Jan 2018 17:09:03 +0800</pubDate>
      
      <guid>https://gobomb.github.io/post/evaluation_strategy/</guid>
      <description>在面试的时候遇到一个问题：“golang 的传参是按值传递还是按引用传递？”我第一反应是 go 在很多场景下传参和赋值都会发生内存的复制，同时记得 go</description>
    </item>
    
    <item>
      <title>交叉编译 V2Ray</title>
      <link>https://gobomb.github.io/post/cross-complie-v2ray/</link>
      <pubDate>Fri, 29 Dec 2017 17:17:27 +0800</pubDate>
      
      <guid>https://gobomb.github.io/post/cross-complie-v2ray/</guid>
      <description>问题和背景 朋友想在路由器里跑 V2Ray，但官方 release 版本不能用，拜托我重新编译一份可执行文件。该路由器没有 FPU（Float Point Unit，浮点运算</description>
    </item>
    
    <item>
      <title>Golang 自带的单元测试</title>
      <link>https://gobomb.github.io/post/how-to-write-unit-testing-in-golang/</link>
      <pubDate>Mon, 06 Nov 2017 16:52:19 +0800</pubDate>
      
      <guid>https://gobomb.github.io/post/how-to-write-unit-testing-in-golang/</guid>
      <description>为什么要写单元测试 以前写程序的时候，一般不写测试，阅读开源代码遇到测试也都是跳过不读。调试的时候一半都是手动输入测试数据，在代码里打印 log 信息</description>
    </item>
    
  </channel>
</rss>